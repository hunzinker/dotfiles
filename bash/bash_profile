[ -f ~/.bash_paths ] && source ~/.bash_paths

[ -f ~/.bash_colors ] && source ~/.bash_colors

[ -f ~/.bash_aliases ] && source ~/.bash_aliases

[ -f ~/.bash_tmux ] && source ~/.bash_tmux


[ -f ~/.fzf.bash ] && source ~/.fzf.bash

## BREW ##
if command brew 1>/dev/null 2>&1; then
    [ -f $(brew --prefix)/etc/bash_completion ] && source $(brew --prefix)/etc/bash_completion
    source $(brew --prefix nvm)/nvm.sh
fi

## RBENV ##
if command rbenv 1>/dev/null 2>&1; then
    eval "$(rbenv init -)"
fi

## JENV ##
if command jenv 1>/dev/null 2>&1; then
    eval "$(jenv init -)"
fi

## PYENV ##
if command pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi

## RUST ##
source $HOME/.cargo/env

HISTCONTROL=ignoreboth

## PS1 ##
## Shell Prompt ##
__prompt_command() {
    EXIT="$?"
    PS1=""

    if [ $EXIT -eq 0 ]; then
        PS1+="${green}[\!] "
    else
        PS1+="${red}[\!] "
    fi

    # If logged in via ssh shows the ip of the server
    if [ -n "$SSH_CLIENT" ]; then
        IFS=" " read -ra SERVER_IP <<< ${SSH_CONNECTION}
        PS1+="${yellow}("${SERVER_IP[2]}") "
    fi

    PS1+="${bold_purple}\W "

    # Add rbenv to prompt
    PS1+="${yellow}$(rbenv version | sed -e 's/ .*//') "

    # Add jenv to prompt
    PS1+="${yellow}$(cat $HOME/.jenv/version | sed -e 's/ .*//') "

    # Check if inside git repo
    local git_status="$(git status -unormal 2>&1)"
    if ! [[ "$git_status" =~ not\ a\ git\ repo ]]; then
        # Parse the porcelain output of git status
        if [[ "$git_status" =~ nothing\ to\ commit ]]; then
            local Color_On=${green}
        elif [[ "$git_status" =~ nothing\ added\ to\ commit\ but\ untracked\ files\ present ]]; then
            local Color_On=${purple}
        else
            local Color_On=${red}
        fi

        if [[ "$git_status" =~ On\ branch\ ([^[:space:]]+) ]]; then
            branch=${BASH_REMATCH[1]}
        else
            # Detached HEAD. (branch=HEAD is a faster alternative.)
            branch="$(git describe --all --contains --abbrev=4 HEAD 2> /dev/null || echo HEAD)"
        fi

        # Add the result to prompt
        PS1+="${Color_On}[${branch}] "
    fi

    PS1+="${normal}\$ "
}

## Execute __prompt_command every time PS1 is printed ##
PROMPT_COMMAND=__prompt_command

[ -f ~/.bashrc ] && source ~/.bashrc

bru() {
    brew update && brew upgrade && brew cleanup && brew upgrade --cask
}

pac() {
    sudo pacman -Syu
}

ipaddress() {
    echo $(curl -s ipecho.net/plain)
}

docker_cleanup() {
    docker system prune --volumes
}
