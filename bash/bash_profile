if [ -f ~/.bash_paths ]; then
    source ~/.bash_paths
fi

if [ -f ~/.bash_colors ]; then
    source ~/.bash_colors
fi

if [ -f ~/.bash_aliases ]; then
    source ~/.bash_aliases
fi

if [ -f /usr/local/share/bash-completion/bash_completion ]; then
    source /usr/local/share/bash-completion/bash_completion
fi

## RVM ##
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
rvm use 2.0.0 --default

[[ -r $rvm_path/scripts/completion ]] && . $rvm_path/scripts/completion

## PS1 ##

# Colors
Color_Off="\[\033[0m\]"
Red="\[\033[0;31m\]"
Green="\[\033[0;32m\]"
Purple="\[\033[0;35m\]"
Yellow="\[\033[1;33m\]"
BGreen="\[\033[1;32m\]"
BRed="\[\033[1;31m\]"
BPurple="\[\033[1;35m\]"

## Shell Prompt ##
__prompt_command() {
    EXIT="$?"
    PS1=""

    if [ $EXIT -eq 0 ]; then
        PS1+="\[$Green\][\!]\[$Color_Off\] "
    else
        PS1+="\[$Red\][\!]\[$Color_Off\] "
    fi

    # If logged in via ssh shows the ip of the client
    if [ -n "$SSH_CLIENT" ]; then
        PS1+="\[$Yellow\]("${SSH_CLIENT%% *}")\[$Color_Off\]"
    fi

    PS1+="\[$BGreen\]\u\[$Color_Off\]@\[$BGreen\]\h\[$Color_Off\]:\[$BPurple\]\w\[$Color_Off\] "

    # Add rvm to prompt
    PS1+="\[$Green\]$(~/.rvm/bin/rvm-prompt i v p g)\[$Color_Off\] "

    # Check if inside git repo
    local git_status="$(git status -unormal 2>&1)"
    if ! [[ "$git_status" =~ Not\ a\ git\ repo ]]; then
        # Parse the porcelain output of git status
        if [[ "$git_status" =~ nothing\ to\ commit ]]; then
            local Color_On=$Green
        elif [[ "$git_status" =~ nothing\ added\ to\ commit\ but\ untracked\ files\ present ]]; then
            local Color_On=$Purple
        else
            local Color_On=$Red
        fi

        if [[ "$git_status" =~ On\ branch\ ([^[:space:]]+) ]]; then
            branch=${BASH_REMATCH[1]}
        else
            # Detached HEAD. (branch=HEAD is a faster alternative.)
            branch="$(git describe --all --contains --abbrev=4 HEAD 2> /dev/null || echo HEAD)"
        fi

        # Add the result to prompt
        PS1+="\[$Color_On\][$branch]\[$Color_Off\] "
    fi

    PS1+="\$ "
}

## Execute __prompt_command every time PS1 is printed ##
PROMPT_COMMAND=__prompt_command


## VPN Connect ##
vpn-connect() {
/usr/bin/env osascript <<-EOF
tell application "System Events"
        tell current location of network preferences
                set VPN to service "VPN (PPTP)"
                if exists VPN then connect VPN
                repeat while (current configuration of VPN is not connected)
                    delay 1
                end repeat
        end tell
end tell
EOF
}

## VPN Disconnect ##
vpn-disconnect() {
/usr/bin/env osascript <<-EOF
tell application "System Events"
        tell current location of network preferences
                set VPN to service "VPN (PPTP)"
                if exists VPN then disconnect VPN
        end tell
end tell
EOF
}

bru() {
    brew update && brew upgrade && rvm get stable
}
